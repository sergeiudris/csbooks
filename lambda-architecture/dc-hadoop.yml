version: "3.3"

services: 

  la.hadoop.base:
    image: la.hadoop.base
    build:
      context: ./
      dockerfile: ./base/Dockerfile
    # volumes:
    #   - ./hadoop/.volumes/etc.hadoop:/usr/local/hadoop/etc/hadoop
    # command: bash c init
    command: tail -f /dev/null
    env_file:
      - ./hadoop/.conf/.env
    stdin_open: true
    tty: true


  la.hadoop.namenode:
    image: la.hadoop.namenode
    build:
      context: ./hadoop/namenode
      dockerfile: ./Dockerfile
    volumes:
      - ./hadoop/namenode:/opt/code/app
    # command: bash c init
    command: tail -f /dev/null
    env_file:
      - ./hadoop/.conf/.env
    stdin_open: true
    tty: true
    links:
      - la.hadoop.base

  la.hadoop.datanode:
    image: la.hadoop.datanode
    build:
      context: ./hadoop/datanode
      dockerfile: ./Dockerfile
    volumes:
      - ./hadoop/datanode:/opt/code/app
    # command: bash c init
    command: tail -f /dev/null
    env_file:
      - ./hadoop/.conf/.env
    stdin_open: true
    tty: true
    links:
      - la.hadoop.base

  la.hadoop.resourcemanager:
    image: la.hadoop.resourcemanager
    build:
      context: ./hadoop/resourcemanager
      dockerfile: ./Dockerfile
    volumes:
      - ./hadoop/resourcemanager:/opt/code/app
    # command: bash c init
    command: tail -f /dev/null
    env_file:
      - ./hadoop/.conf/.env
    stdin_open: true
    tty: true
    links:
      - la.hadoop.base

  la.hadoop.nodemanager:
    image: la.hadoop.nodemanager
    build:
      context: ./hadoop/nodemanager
      dockerfile: ./Dockerfile
    volumes:
      - ./hadoop/nodemanager:/opt/code/app
    # command: bash c init
    command: tail -f /dev/null
    env_file:
      - ./hadoop/.conf/.env
    stdin_open: true
    tty: true
    links:
      - la.hadoop.base

  la.hadoop.webappproxy:
    image: la.hadoop.webappproxy
    build:
      context: ./hadoop/webappproxy
      dockerfile: ./Dockerfile
    volumes:
      - ./hadoop/webappproxy:/opt/code/app
    # command: bash c init
    command: tail -f /dev/null
    env_file:
      - ./hadoop/.conf/.env
    stdin_open: true
    tty: true
    links:
      - la.hadoop.base

  la.hadoop.jobhistoryserver:
    image: la.hadoop.jobhistoryserver
    build:
      context: ./hadoop/jobhistoryserver
      dockerfile: ./Dockerfile
    volumes:
      - ./hadoop/jobhistoryserver:/opt/code/app
    # command: bash c init
    command: tail -f /dev/null
    env_file:
      - ./hadoop/.conf/.env
    stdin_open: true
    tty: true
    links:
      - la.hadoop.base

# volumes:
#   volume.la.hadoop.namenode:
#       external:
#         name: volume.la.hadoop.namenode

# https://docs.docker.com/compose/compose-file/#long-syntax-3
# https://docs.docker.com/storage/bind-mounts/#configure-bind-propagation

  # la.hadoop.namenode:
  #   image: la.hadoop.namenode
  #   build:
  #     context: ./hadoop/namenode
  #     dockerfile: ./Dockerfile
  #   # volumes:
  #     # - type: bind
  #     #   source: ./hadoop/.volumes/namenode/etc.hadoop
  #     #   target: /usr/local/hadoop/etc/hadoop
  #     #   read_only: false
  #     #   # bind:
  #     #   #   propagation: rshared
  #     #   volume:
  #     #     nocopy: true
        
  #     # - ./hadoop/.volumes/namenode/etc.hadoop:/usr/local/hadoop/etc/hadoop
  #   # command: bash c init
  #   command: tail -f /dev/null
  #   stdin_open: true
  #   tty: true
  #   links:
  #     - la.hadoop.base

# volumes:
#   volume.la.hadoop.namenode:
#     driver: local
#     source: /tmp/volume
#     driver_opts:
#       type: volume
      # o: 'bind'
      # mountpoint: /tmp/volume/la.hadoop.namenode
      # device: '/tmp/volumes/la.hadoop.namenode'